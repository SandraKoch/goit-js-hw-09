{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACuBC,SAASC,cAAc,SAC/BC,UAAUC,IAAI,iBAC7B,MAAMC,EAAeJ,SAASC,cAAc,kBACtCI,EAAcL,SAASC,cAAc,iBACrCK,EAAgBN,SAASC,cAAc,mBAEvCM,EAAiBP,SAASC,cAAc,mBAqB9C,SAASO,EAAcC,EAAUC,GAC/B,MAAMC,EAAc,C,SAClBF,E,MACAC,GAeF,OAbgB,IAAIE,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQF,GAERG,EAAOH,EAAY,GAEpBD,EAAM,G,CAlCbS,QAAQC,IAAIb,GAEZA,EAAec,iBAAiB,SAASC,IACvCA,EAAEC,iBACFC,WAAaC,OAAOrB,EAAasB,OACjCC,UAAYF,OAAOpB,EAAYqB,OAC/BE,OAASH,OAAOnB,EAAcoB,OAE9B,IAAK,IAAIG,EAAI,EAAGA,EAAID,OAAQC,IAAK,CACfrB,EAAcqB,EAAI,EAAGL,WAAaG,UAAYE,GAE3DC,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBZ,EAAAiC,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEhEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBZ,EAAAiC,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst promisesFormEl = document.querySelector('.form');\npromisesFormEl.classList.add('promises-form');\nconst delayInputEl = document.querySelector('[name=\"delay\"]');\nconst stepInputEl = document.querySelector('[name=\"step\"]');\nconst amountInputEl = document.querySelector('[name=\"amount\"]');\n\nconst submitButtonEl = document.querySelector('[type=\"submit\"]');\nconsole.log(submitButtonEl);\n\nsubmitButtonEl.addEventListener('click', e => {\n  e.preventDefault();\n  firstDelay = Number(delayInputEl.value);\n  delayStep = Number(stepInputEl.value);\n  amount = Number(amountInputEl.value);\n\n  for (let i = 0; i < amount; i++) {\n    const promise = createPromise(i + 1, firstDelay + delayStep * i);\n    promise\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  const promiseData = {\n    position,\n    delay,\n  };\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(promiseData);\n      } else {\n        reject(promiseData);\n      }\n    }, delay);\n  });\n\n  //it has to return the promise in order to have an access to promiseData !\n  return promise;\n}\n"],"names":["$iQIUW","parcelRequire","document","querySelector","classList","add","$47d4ff9957288465$var$delayInputEl","$47d4ff9957288465$var$stepInputEl","$47d4ff9957288465$var$amountInputEl","$47d4ff9957288465$var$submitButtonEl","$47d4ff9957288465$var$createPromise","position","delay","promiseData","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.b3976fb3.js.map"}